/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Graphix;

import Player.PlayerDB;
import Player.Player;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author IanGz
 *
 */
public class Graphix extends javax.swing.JFrame {

    public PlayerDB pdb = new PlayerDB();

    /**
     * Creates new form Graphix
     */
    public Graphix() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        StartGameB = new javax.swing.JButton();
        ExitGameB = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        NameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        ClassSelected = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        SaveCharB = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        CharTable = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        DeleteCharB = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(0, 0));

        StartGameB.setText("Start Game");
        StartGameB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartGameBActionPerformed(evt);
            }
        });
        jPanel1.add(StartGameB);

        ExitGameB.setText("Exit");
        ExitGameB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitGameBActionPerformed(evt);
            }
        });
        jPanel1.add(ExitGameB);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("Name:");
        jPanel4.add(jLabel1);

        NameField.setColumns(10);
        NameField.setToolTipText("Introduce a name");
        NameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NameFieldKeyPressed(evt);
            }
        });
        jPanel4.add(NameField);

        jLabel2.setText("Class:");
        jPanel4.add(jLabel2);

        ClassSelected.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Soldier", "Archer", "Mage", "Healer" }));
        jPanel4.add(ClassSelected);

        jPanel2.add(jPanel4, java.awt.BorderLayout.CENTER);

        SaveCharB.setText("Save");
        SaveCharB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveCharBActionPerformed(evt);
            }
        });
        jPanel5.add(SaveCharB);

        jPanel2.add(jPanel5, java.awt.BorderLayout.PAGE_END);

        jTabbedPane1.addTab("Create character", jPanel2);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel6.setLayout(new java.awt.BorderLayout());

        CharTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Class"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(CharTable);

        jPanel6.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel6, java.awt.BorderLayout.CENTER);

        DeleteCharB.setText("Delete character");
        DeleteCharB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteCharBActionPerformed(evt);
            }
        });
        jPanel7.add(DeleteCharB);

        jPanel3.add(jPanel7, java.awt.BorderLayout.PAGE_END);

        jTabbedPane1.addTab("Delete Character", jPanel3);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);
        jTabbedPane1.getAccessibleContext().setAccessibleName("tab 1");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * pdb getter
     *
     * @return
     */
    public PlayerDB getPdb() {
        return pdb;
    }

    /**
     * pdb setter
     *
     * @param pdb
     */
    public void setPdb(PlayerDB pdb) {
        this.pdb = pdb;
    }

    /**
     * this method agregates a character to the character table and database. It
     * also defines the character stats
     *
     * @param evt
     */
    private void SaveCharBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveCharBActionPerformed

        DefaultTableModel model = (DefaultTableModel) CharTable.getModel();

        String name = NameField.getText();

        //The names must be unique
        if (!checkCharName(name)) {

            //It only works if theres a name writen
            if (!"".equals(name)) {

                //Defines stats based on the class chose
                int maxHealth = pdb.DefineStats(ClassSelected.getSelectedIndex())[0];
                int def = pdb.DefineStats(ClassSelected.getSelectedIndex())[1];
                int atk = pdb.DefineStats(ClassSelected.getSelectedIndex())[2];
                int magic = pdb.DefineStats(ClassSelected.getSelectedIndex())[3];
                int dex = pdb.DefineStats(ClassSelected.getSelectedIndex())[4];
                int speed = pdb.DefineStats(ClassSelected.getSelectedIndex())[5];

                Player p = new Player(name, maxHealth, def, atk, magic, dex, speed);

                p.setType(ClassSelected.getSelectedIndex());

                //ads the character to the list
                model.addRow(new Object[]{p.getName(), pdb.getPlayerClass(p)});

                //ads the character to the database
                pdb.getPlayers().add(p);

                JOptionPane.showMessageDialog(CharTable, "Character created");
            } else {

                JOptionPane.showMessageDialog(CharTable, "You need to use a name");

            }
        } else {

            JOptionPane.showMessageDialog(CharTable, "This name already exists");

        }

        NameField.setText("");

    }//GEN-LAST:event_SaveCharBActionPerformed

    /**
     * this method checks if the name param is a name from a character in the
     * character arraylist
     *
     * @param name
     * @return if the name exists or not
     */
    private boolean checkCharName(String name) {

        boolean check = false;

        for (Player player : pdb.getPlayers()) {

            if (player.getName().equals(name)) {

                check = true;

            }

        }

        return check;

    }

    /**
     * this method is used to insert the character pressing enter when writing
     * the name
     *
     * @param evt
     */
    private void NameFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NameFieldKeyPressed

        //shuts the aplication
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            SaveCharB.doClick();

        }

    }//GEN-LAST:event_NameFieldKeyPressed

    /**
     * This method is used to delete a selected character from the aplication
     * table
     *
     * @param evt
     */
    private void DeleteCharBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteCharBActionPerformed

        DefaultTableModel model = (DefaultTableModel) CharTable.getModel();

        //It only works if theres at least 1 character created and selected
        if (CharTable.getSelectedRow() >= 0) {

            //gets the name from the selected character
            String name = CharTable.getModel().getValueAt(CharTable.getSelectedRow(), 0).toString();

            //makes sure you want to delete the character
            if (JOptionPane.showConfirmDialog(jPanel7, "Are you sure you want to delete this character: " + name) == 0) {

                //deletes selected row
                model.removeRow(CharTable.getSelectedRow());

                //iterates the arraylist wich contains the characters and 
                //deletes the one who matches names
                for (int i = 0; i < pdb.getPlayers().size(); i++) {

                    if (pdb.getPlayers().get(i).getName().equals(name)) {

                        pdb.getPlayers().remove(i);

                    }

                }

                JOptionPane.showMessageDialog(CharTable, "Character deleted  :C");

            }
        } else {

            JOptionPane.showMessageDialog(CharTable, "You need to select a character");

        }

    }//GEN-LAST:event_DeleteCharBActionPerformed

    /**
     * shuts the aplication
     *
     * @param evt
     */
    private void ExitGameBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitGameBActionPerformed

        if (JOptionPane.showConfirmDialog(jPanel1, "Do you want to exit the aplication?") == 0) {

            System.exit(0);

        }

    }//GEN-LAST:event_ExitGameBActionPerformed

    /**
     * Starts the game if the character inserted exists
     *
     * @param evt
     */
    private void StartGameBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartGameBActionPerformed

        String name = JOptionPane.showInputDialog(rootPane, "Introduce characters name");

        //If the name is registered you start the game
        if (checkCharName(name)) {

            for (int i = 0; i < pdb.getPlayers().size(); i++) {

                /**
                 * There the selected player is inserted in a different
                 * arraylist. This will be useful later when you can choose more
                 * than 1 character to set a party
                 */
                if (pdb.getPlayers().get(i).getName().equals(name)) {

                    Player usedPlayer = pdb.getPlayers().get(i);

                    pdb.getSelectedPlayers().add(usedPlayer);

                }

            }

            Game game = new Game(Graphix.this);

            game.setVisible(true);

            Graphix.this.setVisible(false);

        } else if (name != null) {

            JOptionPane.showMessageDialog(rootPane, "Thats not a character name, you can check the character name on character list");

        }

    }//GEN-LAST:event_StartGameBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Graphix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Graphix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Graphix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Graphix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Graphix().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CharTable;
    private javax.swing.JComboBox<String> ClassSelected;
    private javax.swing.JButton DeleteCharB;
    private javax.swing.JButton ExitGameB;
    private javax.swing.JTextField NameField;
    private javax.swing.JButton SaveCharB;
    private javax.swing.JButton StartGameB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
